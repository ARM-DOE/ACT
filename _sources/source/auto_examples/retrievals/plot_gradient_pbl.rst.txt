
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source/auto_examples/retrievals/plot_gradient_pbl.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_source_auto_examples_retrievals_plot_gradient_pbl.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_retrievals_plot_gradient_pbl.py:


Planetary Boundary Layer Height Gradient Method Retrievals
----------------------------------------------------------

This example shows how to estimate the planetary boundary layer
height via a gradient method retrieval

Author: Joe O'Brien

.. GENERATED FROM PYTHON SOURCE LINES 10-70



.. image-sg:: /source/auto_examples/retrievals/images/sphx_glr_plot_gradient_pbl_001.png
   :alt: SGP Ceilometer PBL Height Estimate via Gradient Method, SGP Ceilometer PBL Height Estimate via Modified Gradient Method
   :srcset: /source/auto_examples/retrievals/images/sphx_glr_plot_gradient_pbl_001.png
   :class: sphx-glr-single-img





.. code-block:: Python



    import act
    from arm_test_data import DATASETS

    # Read Ceilometer data for an example
    filename_ceil = DATASETS.fetch('sgpceilC1.b1.20190101.000000.nc')
    ds = act.io.arm.read_arm_netcdf(filename_ceil)

    # Apply corrections to the dataset
    ds = act.corrections.correct_ceil(ds, var_name='backscatter')

    # Estimate PBL Height via a gradient method
    ds = act.retrievals.pbl_lidar.calculate_gradient_pbl(ds, parm="backscatter", smooth_dis=3)

    # Estimate PBL Height via a modified gradient method
    ds = act.retrievals.pbl_lidar.calculate_modified_gradient_pbl(
        ds, parm="backscatter", threshold=1e-4, smooth_dis=3
    )

    # Plot the pbl height estimates
    display = act.plotting.TimeSeriesDisplay(ds, subplot_shape=(2,), figsize=(10, 8))

    # plot the CL backscatter before overlaying the Gradient Method PBL Height
    display.plot(
        'backscatter',
        subplot_index=(0,),
        cmap='ChaseSpectral',
        vmin=-6,
        vmax=6,
        set_title='SGP Ceilometer PBL Height Estimate via Gradient Method',
    )

    # overlay the PBL Height estimate, compute ~10min temporal averages
    display.axes[0].plot(
        ds['time'].values,
        ds['pbl_gradient'].rolling(time=38, min_periods=3, center=True).mean().values,
        color='k',
    )
    # shorten the range
    display.set_yrng([0, 2000], subplot_index=(0,))

    # plot the CL backscatter before overlaying the Modified Gradient PBL Height
    display.plot(
        'backscatter',
        subplot_index=(1,),
        cmap='ChaseSpectral',
        vmin=-6,
        vmax=6,
        set_title='SGP Ceilometer PBL Height Estimate via Modified Gradient Method',
    )

    # overlay the PBL Height estimate, compute ~10min temporal averages
    display.axes[1].plot(
        ds['time'].values,
        ds['pbl_mod_gradient'].rolling(time=38, min_periods=3, center=True).mean().values,
        color='k',
    )
    # shorten the range
    display.set_yrng([0, 2000], subplot_index=(1,))


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (10 minutes 30.164 seconds)


.. _sphx_glr_download_source_auto_examples_retrievals_plot_gradient_pbl.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_gradient_pbl.ipynb <plot_gradient_pbl.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_gradient_pbl.py <plot_gradient_pbl.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_gradient_pbl.zip <plot_gradient_pbl.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
