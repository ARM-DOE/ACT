
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source/auto_examples/plotting/plot_violin.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_source_auto_examples_plotting_plot_violin.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plotting_plot_violin.py:


Investigate Temperature Quantiles
---------------------------------

Investigate Temperature Quantiles
using DistributionDisplay Violin Plots

Written: Joe O'Brien

.. GENERATED FROM PYTHON SOURCE LINES 11-42



.. image-sg:: /source/auto_examples/plotting/images/sphx_glr_plot_violin_001.png
   :alt: Aircraft Temperatures 2018-11-04
   :srcset: /source/auto_examples/plotting/images/sphx_glr_plot_violin_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/ACT/ACT/act/plotting/plot.py:85: UserWarning: Could not discern datastreamname and dict or tuple were not provided. Using defaultname of act_datastream!
      warnings.warn(

    Text(46.972222222222214, 0.5, 'Temperature Observations [C]')





|

.. code-block:: Python

    import matplotlib.pyplot as plt

    import act

    from act.io.icartt import read_icartt

    # Call the read_icartt function, which supports input
    # for ICARTT (v2.0) formatted files.
    # Example file is ARM Aerial Facility Navigation Data
    ds = read_icartt(act.tests.EXAMPLE_AAF_ICARTT)

    # Create a DistributionDisplay object to compare fields
    display = act.plotting.DistributionDisplay(ds)

    # Compare aircraft ground speed with ambient temperature
    display.plot_violin('ambient_temp',
                        positions=[1.0],
                        )

    display.plot_violin('total_temp',
                        positions=[2.0],
                        set_title='Aircraft Temperatures 2018-11-04',
                        )

    # Update the tick information
    display.axes[0, 0].set_xticks([0.5, 1, 2, 2.5])
    ticks = ['', 'Ambient Air\nTemp', 'Total\nTemperature', '']
    display.axes[0, 0].set_xticklabels(ticks)

    # Update the y-axis label
    display.axes[0, 0].set_ylabel('Temperature Observations [C]')


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.454 seconds)


.. _sphx_glr_download_source_auto_examples_plotting_plot_violin.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_violin.ipynb <plot_violin.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_violin.py <plot_violin.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
