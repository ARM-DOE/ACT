
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source/auto_examples/plotting/plot_rh_timeseries.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_source_auto_examples_plotting_plot_rh_timeseries.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_auto_examples_plotting_plot_rh_timeseries.py:


Plot winds and relative humidity from sounding data
---------------------------------------------------

This is an example of how to display wind rose and barb timeseries
from multiple days worth of sounding data.

.. GENERATED FROM PYTHON SOURCE LINES 9-22



.. image-sg:: /source/auto_examples/plotting/images/sphx_glr_plot_rh_timeseries_001.png
   :alt: sonde_darwin on 20060119
   :srcset: /source/auto_examples/plotting/images/sphx_glr_plot_rh_timeseries_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/ACT/ACT/examples/plotting/plot_rh_timeseries.py:14: DeprecationWarning: act.io.armfiles.read_netcdf will be replaced in version 2.0.0 by act.io.arm.read_netcdf()
      sonde_ds = act.io.armfiles.read_netcdf(act.tests.sample_files.EXAMPLE_TWP_SONDE_WILDCARD)
    /home/runner/work/ACT/ACT/act/io/armfiles.py:209: UserWarning: Converting non-nanosecond precision datetime values to nanosecond precision. This behavior can eventually be relaxed in xarray, as it is an artifact from pandas which is now beginning to support non-nanosecond precision values. This warning is caused by passing non-nanosecond np.datetime64 or np.timedelta64 values to the DataArray or Variable constructor; it can be silenced by converting the values to nanosecond precision ahead of time.
      temp_ds = xr.Dataset(
    /home/runner/work/ACT/ACT/act/io/armfiles.py:209: UserWarning: Converting non-nanosecond precision datetime values to nanosecond precision. This behavior can eventually be relaxed in xarray, as it is an artifact from pandas which is now beginning to support non-nanosecond precision values. This warning is caused by passing non-nanosecond np.datetime64 or np.timedelta64 values to the DataArray or Variable constructor; it can be silenced by converting the values to nanosecond precision ahead of time.
      temp_ds = xr.Dataset(
    /home/runner/work/ACT/ACT/act/io/armfiles.py:223: UserWarning: Converting non-nanosecond precision datetime values to nanosecond precision. This behavior can eventually be relaxed in xarray, as it is an artifact from pandas which is now beginning to support non-nanosecond precision values. This warning is caused by passing non-nanosecond np.datetime64 or np.timedelta64 values to the DataArray or Variable constructor; it can be silenced by converting the values to nanosecond precision ahead of time.
      ds['base_time'].values = ds['base_time'].values.astype(desired_time_precision)
    /home/runner/work/ACT/ACT/act/io/armfiles.py:224: UserWarning: Converting non-nanosecond precision datetime values to nanosecond precision. This behavior can eventually be relaxed in xarray, as it is an artifact from pandas which is now beginning to support non-nanosecond precision values. This warning is caused by passing non-nanosecond np.datetime64 or np.timedelta64 values to the DataArray or Variable constructor; it can be silenced by converting the values to nanosecond precision ahead of time.
      ds['base_time'] = ds['base_time'].astype(desired_time_precision)






|

.. code-block:: default


    from matplotlib import pyplot as plt

    import act

    sonde_ds = act.io.armfiles.read_netcdf(act.tests.sample_files.EXAMPLE_TWP_SONDE_WILDCARD)

    BarbDisplay = act.plotting.TimeSeriesDisplay({'sonde_darwin': sonde_ds}, figsize=(10, 5))
    BarbDisplay.plot_time_height_xsection_from_1d_data(
        'rh', 'pres', cmap='YlGn', vmin=0, vmax=100, num_time_periods=25
    )
    BarbDisplay.plot_barbs_from_spd_dir('wspd', 'deg', 'pres', num_barbs_x=20)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.525 seconds)


.. _sphx_glr_download_source_auto_examples_plotting_plot_rh_timeseries.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_rh_timeseries.py <plot_rh_timeseries.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_rh_timeseries.ipynb <plot_rh_timeseries.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
